# frozen_string_literal: true
require "rails_helper"

# This spec was generated by rspec-rails when you ran the scaffold generator.
# It demonstrates how one might use RSpec to test the controller code that
# was generated by Rails when you ran the scaffold generator.
#
# It assumes that the implementation code is generated by the rails scaffold
# generator. If you are using any extension libraries to generate different
# controller code, this generated spec may or may not pass.
#
# It only uses APIs available in rails and/or rspec-rails. There are a number
# of tools you can use to make these specs even more expressive, but we're
# sticking to rails and rspec-rails APIs to keep things simple and stable.

RSpec.describe "/users", type: :request do
  # This should return the minimal set of attributes required to create a valid
  # User. As you add validations to User, be sure to
  # adjust the attributes here as well.
  let(:valid_attributes) do
    {
      uid: "abc",
      orcid: "0000000419369078",
      given_name: "Jane",
      family_name: "Doe",
      display_name: "Jane Doe",
      provider: "test"
    }
  end

  describe "GET /show" do
    it "renders a redirct response" do
      user = User.create! valid_attributes
      get user_url(user)
      expect(response).to be_redirect
    end
  end

  context "Whan a user is signed in" do
    let(:user) { FactoryBot.create :user }
    before do
      login_as user
    end

    describe "GET /show" do
      it "renders a successful response" do
        get user_url(user)
        expect(response).to be_successful
      end
    end
  end
end
